<?php

// Create array containing abbreviations of days of week.
$GLOBALS['daysOfWeek'] = array(
    $this->translate('Пн'),
    $this->translate('Вт'),
    $this->translate('Ср'),
    $this->translate('Чт'),
    $this->translate('Пт'),
    $this->translate('Сб'),
    $this->translate('Вс')
);

$GLOBALS['months'] = array("1" => $this->translate('Январь'), "2" => $this->translate('Февраль'), "3" => $this->translate('Март'), "4" => $this->translate('Апрель'), "5" => $this->translate('Май'), "6" => $this->translate('Июнь'), "7" => $this->translate('Июль'), "8" => $this->translate('Август'), "9" => $this->translate('Сентябрь'), "10" => $this->translate('Октябрь'), "11" => $this->translate('Ноябрь'), "12" => $this->translate('Декабрь'));

function build_calendar($month, $year, $visitsList) {

    global $daysOfWeek, $months;

    // What is the first day of the month in question?
    $firstDayOfMonth = mktime(0,0,0,$month,1,$year);

    // How many days does this month contain?
    $numberDays = date('t',$firstDayOfMonth);

    // Retrieve some information about the first day of the
    // month in question.
    $dateComponents = getdate($firstDayOfMonth);

    // What is the name of the month in question?
    $monthName = $months[intval(date('m',$firstDayOfMonth))];

    // What is the index value (0-6) of the first day of the
    // month in question.
    $dayOfWeek = $dateComponents['wday'] - 1;

    // Create the table tag opener and day headers

    $calendar = "<table class='table'>";
    $calendar .= "<h5 class='classic-title text-right' style='margin-bottom: -1px;'><span>$monthName $year</span></h5>";
    $calendar .= "<tr>";

    // Create the calendar headers

    foreach($daysOfWeek as $day) {
        $calendar .= "<th class='header text-center'>$day</th>";
    }

    // Create the rest of the calendar

    // Initiate the day counter, starting with the 1st.

    $currentDay = 1;

    $calendar .= "</tr><tr>";

    // The variable $dayOfWeek is used to
    // ensure that the calendar
    // display consists of exactly 7 columns.

    if ($dayOfWeek > 0) {
        $calendar .= "<td colspan='$dayOfWeek'>&nbsp;</td>";
    }

    $month = str_pad($month, 2, "0", STR_PAD_LEFT);

    while ($currentDay <= $numberDays) {

        // Seventh column (Saturday) reached. Start a new row.

        if ($dayOfWeek == 7) {

            $dayOfWeek = 0;
            $calendar .= "</tr><tr>";

        }

        $currentDayRel = str_pad($currentDay, 2, "0", STR_PAD_LEFT);

        $date = "$year-$month-$currentDayRel";


        if (count($visitsList) != count($visitsList, COUNT_RECURSIVE)) {
            $counterForVisits = array_key_exists($date, $visitsList) ? $visitsList[$date][1] : '<small class="text-muted">0</small>';
            $calendar .= "<td class='day  ".(array_key_exists($date, $visitsList) ? ' day-selected' : '')."' title='$date'>".$counterForVisits." <div class='day-label'>$currentDay</div></td>";
        } else {
            $calendar .= "<td class='day  ".(in_array($date, $visitsList) ? ' day-selected' : '')."' title='$date'>$currentDay</td>";
        }


        // Increment counters

        $currentDay++;
        $dayOfWeek++;

    }



    // Complete the row of the last week in month, if necessary

    if ($dayOfWeek != 7) {

        $remainingDays = 7 - $dayOfWeek;
        $calendar .= "<td colspan='$remainingDays'>&nbsp;</td>";

    }

    $calendar .= "</tr>";

    $calendar .= "</table>";

    return $calendar;

}

?>


